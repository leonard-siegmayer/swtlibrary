### BACKEND ###
FROM openjdk:8-jdk-alpine as buildbackend
WORKDIR /workspace/app

ENV SRCPATH=Backend/SWT/

COPY ${SRCPATH}/mvnw .
COPY ${SRCPATH}/.mvn .mvn
COPY ${SRCPATH}/pom.xml .
COPY ${SRCPATH}/src/main src/main
COPY ${SRCPATH}/templates templates
COPY ${SRCPATH}/es_settings.json .

RUN ./mvnw install -DskipTests
RUN mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)

FROM openjdk:8-jdk-alpine as backend
VOLUME /tmp
# RUN true, see
# https://github.com/moby/moby/issues/37965#issuecomment-488155862
ARG DEPENDENCY=/workspace/app/target/dependency
RUN apk --no-cache add curl
COPY --from=buildbackend ${DEPENDENCY}/BOOT-INF/lib /app/lib
RUN true
COPY --from=buildbackend ${DEPENDENCY}/BOOT-INF/lib /app/lib
RUN true
COPY --from=buildbackend ${DEPENDENCY}/META-INF /app/META-INF
RUN true
COPY --from=buildbackend ${DEPENDENCY}/BOOT-INF/classes /app
RUN true
COPY --from=buildbackend /workspace/app/es_settings.json /
RUN true
COPY --from=buildbackend /workspace/app/templates /templates
RUN true

RUN apk add --no-cache bash
ADD https://github.com/taiidani/docker-wait-for-it/raw/master/docker/example/wait-for-it/wait-for-it.sh /usr/local/bin/wait.sh
COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/wait.sh /usr/local/bin/docker-entrypoint.sh
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["java","-cp","app:app/lib/*","de.teamA.SWT.SwtApplication"]


### FRONTEND ###
FROM node:12.2.0 as buildfrontend

ENV SRCPATH=Frontend/SWTLib/

WORKDIR /app

ENV PATH /app/node_modules/.bin:$PATH

COPY ${SRCPATH}/package.json /app/package.json
COPY ${SRCPATH}/package-lock.json /app/package-lock.json
RUN npm install
RUN npm install -g @angular/cli@7.3.9

COPY ${SRCPATH}/ /app

RUN ng build --configuration=production --verbose=true

FROM nginx:1.15 as frontend

COPY --from=buildfrontend /app/dist/SWTLib/ /usr/share/nginx/html
COPY Frontend/SWTLib/nginx.conf /etc/nginx/conf.d/default.conf
